#+TITLE: QwatchCapture
#+DATE: <2015-03-10 Tue>
#+AUTHOR: Shota TAKAHASHI
#+EMAIL: shotakaha@gmail.com
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:nil arch:headline
#+OPTIONS: author:t c:nil creator:comment d:(not "LOGBOOK") date:t
#+OPTIONS: e:t email:nil f:t inline:t num:t p:nil pri:nil stat:t
#+OPTIONS: tags:t tasks:t tex:t timestamp:t toc:nil todo:t |:t
#+CREATOR: Emacs 24.4.1 (Org mode 8.2.10)
#+DESCRIPTION:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: ja
#+SELECT_TAGS: export

* 何をするものなのか？

  IO-DATAのQwatchを使って定点観測するためのPythonスクリプト

* 動作環境

  - [[http://www.iodata.jp/product/lancam/lancam/ts-wlcam/][IO-DATA Qwatch TS-WLCAMシリーズ]]
    - USBケーブルしか付属してないので注意
    - TS-WLCAM用ADアダプター（[[http://www.ioplaza.jp/shop/g/g60-TVCXGA2-001/][TVC-XGA2]]）があるとよい
  - MacOS X(10.10 Yosemite) + Python 2.7.9
  - Ubuntu (14.04LTS) + Python 2.7.6 + ffmpeg 2.6

* やってること

  - wgetで画像を取ってきて、その時の時刻でリネームする

#+begin_src bash
$ wget --http-user=USER --http-password=PASS http://QwatchIPADDRESS/snapshot.jpg
$ mv snapshot.jpg snapshots/YYYY-MMDD-hhmm-ss.jpg
#+end_src

  - 画像がある程度たまったら、タイムラプス動画（早送り動画）にする

#+begin_src bash
$ ffmpeg -y -f image2 -r 15 -pattern_type glob -i 'snapshots/*.jpg' -r 15 -an -vcodec libx264 -pix_fmt yuv420p video.mp4
$ mv video.mp4 snapshots/
#+end_src

  - これらの動作をcronに食べさせて、定期的に実行している


** もうちょいやってること

   - ユーザ情報（USER、PASS）をファイル中に書くのは嫌
     - PythonのConfigParserモジュールを使って外部ファイルから読むことにする
   - 以下のwgetのオプションを使えるようにしている
     - アクセスできなかった場合にタイムアウトする秒数（デフォルト 10秒に設定）
     - タイムアウトした際にリトライする回数（デフォルト 1回に設定）
     - ログをファイルを残すときのファイル名（デフォルト qwatch.logに設定）

* 使い方

** 設定ファイルを用意する

   - qwconf.exampleをコピーしてmyconf.confを新規に作成する
   - myconf.confの中身を自分のQwatchの設定に書き換える

*** 設定ファイルの書式

#+begin_src config
[WEBCAM]
name = CAMNAME
uri = http://QWatchADDRESS/snapshot.jpg
user = USER
pass = PASS
base = EXPERIMENTS/%(name)s
#+end_src

    - WEBCAM :: ConfigParserで「セクション」と呼ぶ。カメラごとに異なった名前にする。
    - name :: 名前。カメラ毎に保存先を分けるために使う。（全部同じにしても動くが、後で編集することを考えると非推奨）
    - uri :: JPEGファイルの場所。TS-WLCAMシリーズの場合は「QwatchADDRESS」の部分を該当のIPアドレスに書き換えればOK
    - user :: ユーザー名
    - pass :: パスワード
    - base :: 画像／動画を保存するディレクトリ。%(name)sの部分は、上にある「name」で置換される。EXPERIMENTSには各実験グループ名（とか用途）をいれるつもり。

*** 画像／動画の保存先

    - スクリプト内部で日付ごとに管理している
    - ファイルパスの例
      - 画像 :: EXPERIMENTS/CAMNAME/snapshots/2015/03/11/2015-0311-2230-15.jpg
      - 動画 :: EXPERIMENTS/CAMNAME/timelapse/2015-03-11.jpg

    - ブラウザで確認したい場合は、experiments を公開ディレクトリへのシンボリックにするとよい
#+begin_src bash
$ ln -s ~/public_html/qwatch/snap experiments
#+end_src

*** 複数台カメラを設定する場合（みかくにん）

    - １台ごとにconfファイルを用意して、引数にしてもOK
    - １つのconfファイルに複数台の設定を書いてもOK

#+begin_src config
[WEBCAM1]
name = CAMNAME1
uri = http://QWatchADDRESS-1/snapshot.jpg
user = USER
pass = PASS
base = WEBHOME/%(name)s

[WEBCAM2]
name = CAMNAME2
uri = http://QWatchADDRESS-2/snapshot.jpg
user = USER
pass = PASS
base = WEBHOME/%(name)s
#+end_src


** 画像をキャプチャする : qwcapture

   - confファイルを引数にして実行する

  #+begin_src bash
  $ ./qwcapture.py QWCONF.conf
  #+end_src

   - 複数のconfファイルを指定することもできる

#+begin_src bash
$ ./qwcapture.py QWCONF.conf QWCONF2.conf
#+end_src

*** オプションについて

    - いちおうwgetのオプションが使えるようになっている
    - ヘルプを確認して下さい

#+begin_src bash
$ ./qwatch.py -h
#+end_src

** タイムラプス動画の作成 : qwtimelapse

   - 日付とconfファイルを引数にして実行する
   - 日付には、「today」「yesterday」「YYYY/mm/dd の書式」が使える
   - 日付は *１個* しか指定できない（confファイルは複数指定できる）
     - 基本的に毎日更新するため、複数日をまとめてやる必要が（とりあえず）ないと思うから

  #+begin_src bash
  $ ./qwtimelapse.py DATE QWCONF.conf
  #+end_src

** cronに登録する

   - qwcron.example をコピーして、mycron.txtを作成する（拡張子はなんでもよい）

#+begin_src bash
$ cp qwcron.example mycron.txt    ## Copy example and modify
$ crontab mycron.txt              ## Eat mycron.txt
$ crontab -l                      ## Check crontab
#+end_src

   - crontabは上書きされてしまうので、すでに設定がある場合はバックアップを取っておく

#+begin_src bash
$ crontab -l > mycront.bk    ## Backup crontab
#+end_src

*** cronの書式

#+begin_src text
分 時 日 月 曜日 実行コマンド
#+end_src

*** 10分ごとに画像をキャプチャする場合

    - QwatchCaptureのあるディレクトリまでのパスを指定する
    - confファイルも指定する

#+begin_src text
QWDIR=      ## qwatch.py があるディレクトリを指定する
QWCONFIGS=  ## confファイルを指定（複数指定できる、半角スペースで区切る（みかくにん））

*/10 * * * * `cd $QWDIR && ./qwcapture.py $QWCONFIG`
#+end_src

*** 1時間ごとにタイムラプス動画を作る場合（みかくにん）

    - 毎時5分に作成（キャプチャの実行と時間をずらしてある）
    - 毎日00時08分に、前日の動画をまとめる（これも時間をずらしてある）

#+begin_src text
5 * * * * `cd $QWDIR && ./qwtimelapse.py today QWCONFIGS`
8 0 * * * `cd $QWDIR && ./qwtimelapse.py yesterday QWCONFIGS`
#+end_src

*** ログの確認

    - cronのログは以下のディレクトリ／ファイルで確認できる

#+begin_src bash
$ tail /var/log/syslog
$ sudo ls -ltrh /var/spool/nullmailer/queue/ | tail   ## ログファイル名、タイムスタンプ、サイズを確認する
$ sudo less /var/spool/nullmailer/queue/LOGFILE       ## 上で調べたLOGFILE名の中には、cron実行時のログが吐き出されている
#+end_src
