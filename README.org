#+TITLE: QwatchCapture
#+DATE: <2015-03-10 Tue>
#+AUTHOR: Shota TAKAHASHI
#+EMAIL: shotakaha@gmail.com
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:nil arch:headline
#+OPTIONS: author:t c:nil creator:comment d:(not "LOGBOOK") date:t
#+OPTIONS: e:t email:nil f:t inline:t num:t p:nil pri:nil stat:t
#+OPTIONS: tags:t tasks:t tex:t timestamp:t toc:nil todo:t |:t
#+CREATOR: Emacs 24.4.1 (Org mode 8.2.10)
#+DESCRIPTION:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: ja
#+SELECT_TAGS: export

* 何をするものか？

  IO-DATAのQwatchを使って定点観測するためのPythonスクリプトです。

* 動作環境

  - IO-DATA WLCAM Qwatchシリーズ
  - Python 2.7
  - MacOS X

* やってること

  - wgetで画像を取ってきて、その時の時刻でリネームする

#+begin_src bash
$ wget --http-user=USER --http-password=PASS http://QwatchIPADDRESS/snapshot.jpg
$ mv snapshot.jpg snapshots/YYYY-MMDD-hhmm-ss.jpg
#+end_src

** プラスアルファ

   - ユーザ情報は、ConfigParserモジュールを使って外部ファイルから読むことにする
   - アクセスできなかった場合にタイムアウトする秒数、リトライする回数はwgetのオプションをラップする
   - ログファイルもwgetのオプションを使う

* 使い方

** 設定ファイルを用意する

   - example.cfgをコピーしてdefault.cfgを新規作成する
   - default.cfgを自分の用途にあったように書き換える

*** 設定ファイルの書式

#+begin_src config
[Capture]
uri = http://QWATCHADDRESS/snapshot.jpg
user = USER
pass = PASS
#+end_src

** 実行する

  #+begin_src bash
  $ python qwatch.py
  #+end_src

** 画像の保存先

   - ファイル名は「snapshots/YYYY-MMDD-hhmm-ss.jpg」
   - カレントディレクトリに「snapshots/」を作成する
   - 公開ディレクトリへのシンボリックリンクでも良い

** cronに登録する
